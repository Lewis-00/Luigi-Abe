---
interface Props {
    href: string;
    text: string;
    isActive?: boolean;
    color?: string;
}

const { href, text, isActive = false, color = "#687c4f" } = Astro.props as Props;
---

<a
    class={`wavy-link ${isActive ? "active" : ""}`}
    href={href}
    style={`--wavy-color: ${color};`}
    data-text="text-text-text-text"
>
    {text}
</a>

<style>
    .wavy-link {
        text-decoration: none;
        position: relative;
        padding-bottom: 1em;
        overflow: hidden;
        color: inherit;
    }

    .wavy-link::after {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        white-space: nowrap;
        content: attr(data-text) attr(data-text);
        color: transparent;
        line-height: 1.8;
        text-decoration: underline;
        text-decoration-style: wavy;
        text-decoration-color: var(--wavy-color);
        display: none;
        transition: opacity 0.3s ease;
    }

    .wavy-link.active::after {
        display: block;
    }

    .wavy-link.active:hover::after {
        animation: wavy-slide 2s linear infinite;
    }

    @keyframes wavy-slide {
        to {
            margin-left: -51%;
        }
    }
</style>
